//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rosalina Code Generator tool.
//     Version: 4.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using UnityEngine;
using UnityEngine.UIElements;

public partial class RightPane
{
    [SerializeField]
    private UIDocument _document;
    public IndividualPhaseUI IndividualPhaseUI { get; private set; }

    public StrategyPhaseUI StrategyPhaseUI { get; private set; }

    public MartialPhaseUI MartialPhaseUI { get; private set; }

    public SearchResult SearchResultUI { get; private set; }

    public CountryInfo CountryInfo { get; private set; }

    public VisualElement UIContainer { get; private set; }

    public Button buttonNextPhase { get; private set; }

    public Button buttonNextTurn { get; private set; }

    public Button buttonAuto { get; private set; }

    public Button buttonHold { get; private set; }

    public Button buttonToggleDebugUI { get; private set; }

    public VisualElement DebugUI { get; private set; }

    public VisualElement DebugUIParent { get; private set; }

    public VisualElement Root => _document?.rootVisualElement;
    public void InitializeDocument()
    {
        IndividualPhaseUI = new IndividualPhaseUI(Root?.Q<VisualElement>("IndividualPhaseUI"));
        StrategyPhaseUI = new StrategyPhaseUI(Root?.Q<VisualElement>("StrategyPhaseUI"));
        MartialPhaseUI = new MartialPhaseUI(Root?.Q<VisualElement>("MartialPhaseUI"));
        SearchResultUI = new SearchResult(Root?.Q<VisualElement>("SearchResultUI"));
        CountryInfo = new CountryInfo(Root?.Q<VisualElement>("CountryInfo"));
        UIContainer = Root?.Q<VisualElement>("UIContainer");
        buttonNextPhase = Root?.Q<Button>("buttonNextPhase");
        buttonNextTurn = Root?.Q<Button>("buttonNextTurn");
        buttonAuto = Root?.Q<Button>("buttonAuto");
        buttonHold = Root?.Q<Button>("buttonHold");
        buttonToggleDebugUI = Root?.Q<Button>("buttonToggleDebugUI");
        DebugUI = Root?.Q<VisualElement>("DebugUI");
        DebugUIParent = Root?.Q<VisualElement>("DebugUIParent");
    }
}